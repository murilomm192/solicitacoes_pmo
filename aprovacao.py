import streamlit as st
import polars as pl

from ui_functions import lista_comerciais, lista_opera√ß√µes, lista_tabelas, tipo_solicita√ß√µes, make_aprova√ß√£o_tabelas_especiais, make_aprova√ß√£o_segmento
from models import Solicita√ß√£o_Segmento, Solicita√ß√£o_Tabela_Especial, Session, engine, select


st.set_page_config(
    page_title="Aprova√ß√µes", page_icon="üìà", layout='wide', initial_sidebar_state='collapsed'
)

ss = st.session_state

st.title('Aprova√ß√µes')

col1, col2, col3 = st.columns(3)

with col1:
    st.selectbox('Tipo de solicita√ß√£o', tipo_solicita√ß√µes, key='selected_solicita√ß√µes')

with Session(engine) as session:
    if ss['selected_solicita√ß√µes'] == 'Ajuste de Segmento':
        statement = select(Solicita√ß√£o_Segmento.opera√ß√£o).distinct()
    if ss['selected_solicita√ß√µes'] == 'Inclus√£o/Exclus√£o PDV de Tabela Especial':
        statement = select(Solicita√ß√£o_Tabela_Especial.opera√ß√£o).distinct()
    list_op = list(session.exec(statement).fetchall())

with col2:
    st.multiselect('Opera√ß√µes', list_op, default=list_op, key='selected_opera√ß√µes')

with Session(engine) as session:
    if ss['selected_solicita√ß√µes'] == 'Ajuste de Segmento':
        solicitante = select(Solicita√ß√£o_Segmento.nome_usuario).where(Solicita√ß√£o_Segmento.opera√ß√£o.in_(ss['selected_opera√ß√µes'])).distinct()
    if ss['selected_solicita√ß√µes'] == 'Inclus√£o/Exclus√£o PDV de Tabela Especial':
        solicitante = select(Solicita√ß√£o_Tabela_Especial.nome_usuario).where(Solicita√ß√£o_Tabela_Especial.opera√ß√£o.in_(ss['selected_opera√ß√µes'])).distinct()

    list_solicit = list(session.exec(solicitante).fetchall())

with col3:
    st.multiselect('Solicitante', list_solicit, default=list_solicit, key='selected_solicitante')

try:
    match ss['selected_solicita√ß√µes']:
        case 'Ajuste de Segmento':
            make_aprova√ß√£o_segmento(ss['selected_opera√ß√µes'], ss['selected_solicitante'])
        case 'Inclus√£o/Exclus√£o PDV de Tabela Especial':
            make_aprova√ß√£o_tabelas_especiais(ss['selected_opera√ß√µes'], ss['selected_solicitante'])
except pl.ColumnNotFoundError:
    st.write('sem a√ß√µes selecionadas')

        

